// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("PSQL_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Personnel {
  pid            String           @id
  name           String
  email          String
  address        String
  supervisor_id  String?
  User           User[]
  AccountManager AccountManager[]
  Driver         Driver[]
}

model User {
  user_id   String    @id
  role      String
  login     String
  password  String
  personnel Personnel @relation(fields: [user_id], references: [pid])
}

model Truck {
  truck_id           String               @id
  model              String
  truck_type         String
  MaintenanceRecord  MaintenanceRecord[]
  ServiceFulfillment ServiceFulfillment[]
}

model MaintenanceRecord {
  truck_id     String
  service_date String
  description  String
  truck        Truck  @relation(fields: [truck_id], references: [truck_id])

  @@id([truck_id, service_date])
}

model Container {
  container_id       String               @id
  container_type     String
  date_when_built    String
  ContainerWasteType ContainerWasteType[]
}

model WasteType {
  waste_type         String               @id
  ContainerWasteType ContainerWasteType[]
  ServiceAgreement   ServiceAgreement[]
}

model ContainerWasteType {
  container_id String
  waste_type   String
  container    Container @relation(fields: [container_id], references: [container_id])
  wasteType    WasteType @relation(fields: [waste_type], references: [waste_type])

  @@id([container_id, waste_type])
}

model AccountManager {
  pid             String    @id
  manager_title   String
  office_location String
  personnel       Personnel @relation(fields: [pid], references: [pid])
  Account         Account[]
}

model Driver {
  pid                String               @id
  certification      String
  owned_truck_id     String?
  personnel          Personnel            @relation(fields: [pid], references: [pid])
  ServiceFulfillment ServiceFulfillment[]
}

model Account {
  account_no       String             @id
  account_mgr      String
  customer_name    String
  contact_info     String
  customer_type    String
  start_date       String
  end_date         String
  total_amount     Float
  accountManager   AccountManager     @relation(fields: [account_mgr], references: [pid])
  ServiceAgreement ServiceAgreement[]
}

model ServiceAgreement {
  service_no       String
  master_account   String
  location         String
  waste_type       String
  pick_up_schedule String
  local_contact    String
  internal_cost    Float
  price            Float
  account          Account   @relation(fields: [master_account], references: [account_no])
  wasteType        WasteType @relation(fields: [waste_type], references: [waste_type])

  @@id([master_account, service_no])
}

model ServiceFulfillment {
  date_time      String
  master_account String
  service_no     String
  truck_id       String
  driver_id      String
  cid_drop_off   String
  cid_pick_up    String
  truck          Truck  @relation(fields: [truck_id], references: [truck_id])
  driver         Driver @relation(fields: [driver_id], references: [pid])

  @@id([date_time, master_account, service_no, truck_id, driver_id, cid_drop_off, cid_pick_up])
}
